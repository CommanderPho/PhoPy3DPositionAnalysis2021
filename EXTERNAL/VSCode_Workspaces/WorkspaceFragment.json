"actionButtons": {
	"commands": [
		{
			"name": "Back",
			"color": "white",
			"useVsCodeApi": true,
			"command": "workbench.action.navigateBack"
		},
		{
			"name": "Forward",
			"color": "white",
			"useVsCodeApi": true,
			"command": "workbench.action.navigateForward"
		},
		{
			"name": "Toggle Cell Output Scrolling",
			"color": "orange",
			"useVsCodeApi": true,
			"command": "notebook.cell.toggleOutputScrolling"
		},
        {
            "name": "Restart Python Language Server",
            "color": "#00FF00",
            "useVsCodeApi": true,
            "command": "python.analysis.restartLanguageServer"
        },
        // {
        //     "name": "Toggle line numbers",
        //     "color": "#00FF00",
        //     "useVsCodeApi": true,
        //     "command": "python.analysis.restartLanguageServer"
        // },
		{
			"name": "VSCode Dev Consoler",
			"color": "#99CCFF",
			"useVsCodeApi": true,
			"command": "workbench.action.toggleDevTools"
		},
    ],
    "defaultColor": "grey",
    "reloadButton": "â†»",
    "loadNpmCommands": true
},
"custom-text-transform.transforms": [
    {
        "name": "Variable list into Python dictionary",
        "function": "const variableList = input.split(',').map(varName => varName.trim()); return '{' + variableList.map(varName => `'${varName}':${varName}`).join(', ') + '}';"
    },
    {
        "name": "Variable list into kwargs",
        "function": "const variableList = input.split(',').map(varName => varName.trim()); return variableList.map(varName => `${varName}=${varName}`).join(', ');"
    },
    {
        "name": "Function definition into classdef method definition",
        "function": "const lines = input.trim().split('\\n'); const funcName = lines[0].trim().split(' ')[1].split('(')[0]; const args = lines[0].trim().split('(')[1].split(')')[0].split(',').map(arg => arg.trim()); const body = lines.slice(1, -1).join('\\n'); return `def ${funcName}(self, ${args.join(', ')}):${body ? '\\n' + body : ''}`;"
    },
    {
        "name": "Python function definition to kwargs call",
        "function": "return input.replace(/def\\s+(\\w+)\\(([^)]*)\\):[\\s\\S]*/, (_, fnName, params) => fnName + '(' + params.replace(/\\w+\\s*(?:\\:[^=,]+)?\\s*(=\\s*[^,]+)?/g, (p) => p.trim().split('=')[0].trim() + '=' + p.trim().split('=')[0].trim()).split(',').join(', ') + ')');"
    },
],

