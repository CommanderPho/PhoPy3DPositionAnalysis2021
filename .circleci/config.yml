# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
install-python-components: &install-python-components
  name: Install FEniCS Python components
  command: |
            pip3 install git+https://github.com/FEniCS/fiat.git --upgrade
            pip3 install git+https://github.com/FEniCS/ufl.git --upgrade
            pip3 install git+https://github.com/FEniCS/ffcx.git --upgrade
            rm -rf /usr/local/include/dolfin /usr/local/include/dolfin.h

configure-cpp: &configure-cpp
  name: Configure (C++)
  command: mkdir -p build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/


build-install-cpp: &build-install-cpp
  name: Build and install (C++)
  command: cd build && ninja -j3 install


build-python-interface: &build-python-interface
  name: Build Python/pybind11 interface
  command: |
    cd python
    pip3 -v install . --user


version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      #- image: circleci/python:3.6.1
      - image: quay.io/fenicsproject/dolfinx:dev-env-real

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install vtkplotter
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install .

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}


      # FEniCS:
      - run: *install-python-components
      - run: *configure-cpp
      - run: *build-install-cpp
      - run: *build-python-interface


      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd ~/repo/vtkplotter
            python tests/test_clone.py
            python tests/test_dolfin.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
