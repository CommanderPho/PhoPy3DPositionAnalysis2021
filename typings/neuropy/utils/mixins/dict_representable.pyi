"""
This type stub file was generated by pyright.
"""

from benedict import benedict

class DictInitializable:
    """ Implementors can be initialized from a dict
    """
    @staticmethod
    def from_dict(d: dict):
        ...
    


class DictRepresentable(DictInitializable):
    def to_dict(self, recurrsively=...):
        ...
    


class SubsettableDictRepresentable(DictRepresentable):
    """ confomers can be subsettable
    requires `benedict` library: from benedict import benedict # https://github.com/fabiocaccamo/python-benedict#usage

    # SubsettableDictRepresentable: provides `to_dict`, `keys`, `keypaths`, `as_tuple`,`has_keys`, `check_keys`
    """
    def to_dict(self, subset_includelist=..., subset_excludelist=...) -> benedict:
        """ 
        Inputs:
            subset_includelist:<list?> a list of keys that specify the subset of the keys to be returned. If None, all are returned.
        """
        ...
    
    def keys(self, subset_includelist=..., subset_excludelist=...): # -> list[Any]:
        ...
    
    def keypaths(self, subset_includelist=..., subset_excludelist=...): # -> list[Any]:
        ...
    
    def as_tuple(self, subset_includelist=..., subset_excludelist=..., drop_missing: bool = ...): # -> tuple[Any, ...]:
        """ returns a tuple of just its values 
        Inputs:
            subset_includelist:<list?> a list of keys that specify the subset of the keys to be returned. If None, all are returned.

        Usage:
        curr_sess_ctx_tuple = curr_sess_ctx.as_tuple(subset_includelist=['format_name','animal','exper_name', 'session_name'])
        curr_sess_ctx_tuple # ('kdiba', 'gor01', 'one', '2006-6-07_11-26-53')

        """
        ...
    
    def has_keys(self, keys_list) -> list[bool]:
        """ returns a boolean array with each entry indicating whether that element in keys_list was found in the context """
        ...
    
    def check_keys(self, keys_list, debug_print=...) -> tuple[bool, list, list]:
        """ checks whether it has the keys or not
        Usage:
            all_keys_found, found_keys, missing_keys = curr_sess_ctx.check_keys(['format_name','animal','exper_name', 'session_name'], debug_print=False)
        """
        ...
    


