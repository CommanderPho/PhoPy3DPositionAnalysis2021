2020/01/27
- revised plotting
- added matplotlib-like syntax as in `plot()`
- spherical histograms
- background color now defaults to white
- added `Mesh.idLabels()` to generate cells and point ID labels


2020/01/20
- added shapes Arrow2D and Arrows2D, SphericGrid, CubicGrid
- completely revised customizable axes=1 type
  - axes can be created for each object independently
- quiver plots, scatter plots, error bands plots
- plotting in spherical coordinates
- '2d' backend to plot static images in notebooks.
Available backends:
```python
from vtkplotter import *
# embedWindow('2d')
# embedWindow('k3d')
# embedWindow('itk')
# embedWindow('panel')
# embedWindow(False)
```
- Added wavefront format .OBJ writer


2020/01/08
- added type axes=11 (horizontal grid)
- fix bug by @m-albert on Volume from numpy object
- fix typos in docs
- change old fashioned list(zip()) to np.stack()
- change [0]*len(z) to np.zeros_like(z)
- add testing directory with circleCI
- examples and package are now split into two separate repos
- added possibility to run any example from CLI `vtkplotter --run shrink.py`
  or list them all with `vtkplotter --list`
- reshuffled methods by splitting actors.py module
- general improvements and stability
- some methods are now deprecated: getPoints becomes points() etc.
- Actor() becomes Mesh()
- added advanced/centerline.py examples
- bump version to 2020.0.1


2019/11/19
- added PDV paraview file reading.
- PDB protein data bank file reader
- added error bars in plotxy()
- fast fitting of 2d circles with utils.fitCircle2D()
- added flag-style pop-up labels for meshes and volumes
- added settings for resolving polygonal clashes with mesh edges
- built in set of parametric surfaces in shapes.py module
- improved plotting with error bars
- added warpMeshToPoint() method
- improved texture control, can pass texture coords explicitly
- fix trimesh problem with coloring vertices
- can use "panel" backend in notebooks
